{"version":3,"sources":["../src/server.js"],"names":[],"mappings":";;;;uBAAoB,SAAS;;;;oBACZ,MAAM;;;;gCACJ,sBAAsB;;;;wBACpB,UAAU;;;;wBACV,UAAU;;;;4BACb,eAAe;;;;sBACd,QAAQ;;;;4BACF,eAAe;;;;0BACjB,aAAa;;;;8BAChB,iBAAiB;;;;8BACf,mBAAmB;;AAEzC,IAAM,GAAG,GAAG,2BAAS,CAAC;;AAEtB,sBAAS,OAAO,CAAC,sBAAM,GAAG,CAAC,CAAC;AAC5B,IAAM,EAAE,GAAG,sBAAS,UAAU,CAAC;AAC/B,EAAE,CAAC,EAAE,CAAC,OAAO,EAAE,UAAC,GAAG,EAAK;AACtB,SAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACjB,SAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;CACjC,CAAC,CAAC;AACH,EAAE,CAAC,IAAI,CAAC,MAAM,EAAE,YAAM;AACpB,SAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;CAC1B,CAAC,CAAC;;AAEH,OAAO,CAAC,mBAAmB,CAAC,uBAAU,CAAC;;AAEvC,GAAG,CAAC,GAAG,CAAC,yBAAO,KAAK,CAAC,CAAC,CAAC;AACvB,GAAG,CAAC,GAAG,CAAC,gCAAc,CAAC,CAAC;AACxB,GAAG,CAAC,GAAG,CAAC,8BAAY,CAAC,CAAC;;AAEtB,GAAG,CAAC,GAAG,CAAC,iCAAQ,EAAE,MAAM,EAAE,gCAAgC,EAAE,CAAC,CAAC,CAAC;AAC/D,GAAG,CAAC,GAAG,CAAC,sBAAS,UAAU,EAAE,CAAC,CAAC;AAC/B,GAAG,CAAC,GAAG,CAAC,sBAAS,OAAO,EAAE,CAAC,CAAC;AAC5B,GAAG,CAAC,GAAG,CAAC,gCAAO,CAAC,CAAC;;;AAGjB,OAAO,CAAC,yBAAyB,CAAC,CAAC,GAAG,wBAAW,CAAC;;AAGlD,GAAG,CAAC,GAAG,CAAC,OAAO,EAAE,kBAAK,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC,CAAC;AAChD,GAAG,CAAC,GAAG,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;;AAE9B,GAAG,CAAC,GAAG,CAAC,8BAAc,CAAC,kBAAK,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;AACxD,GAAG,CAAC,GAAG,CAAC,MAAM,EAAG,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAE,CAAC;;AAE5C,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,YAAM;AAChC,SAAO,CAAC,GAAG,CAAC,6BAA6B,EAAE,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;CAC7D,CAAC,CAAC","file":"server.js","sourcesContent":["import express from 'express';\nimport path from 'path';\nimport routes from './routes/main.routes';\nimport mongoose from 'mongoose';\nimport passport from 'passport';\nimport flash from 'connect-flash';\nimport morgan from 'morgan';\nimport cookieParser from 'cookie-parser';\nimport bodyParser from 'body-parser';\nimport session from 'express-session';\nimport { dbUrl } from './config/database';\n\nconst app = express();\n// database connection\nmongoose.connect(dbUrl.url);\nconst db = mongoose.connection;\ndb.on('error', (err) => {\n  console.log(err);\n  console.log('error connection');\n});\ndb.once('open', () => {\n  console.log('connect!!');\n});\n\nrequire('./config/passport')(passport); // pass passport for configuration\n\napp.use(morgan('dev'));\napp.use(cookieParser());\napp.use(bodyParser());\n// required for passport\napp.use(session({ secret: 'ilovescotchscotchyscotchscotch' })); // session secret\napp.use(passport.initialize());\napp.use(passport.session()); // persistent login sessions\napp.use(flash()); // use connect-flash for flash messages stored in session\n\n// routes ======================================================================\nrequire('./routes/main.routes.js')(app, passport); // load our routes and pass in our app and fully configured passport\n\n\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'hjs');\n// app.use('/', routes);\napp.use(express.static(path.join(__dirname, 'public')));\napp.set('port', (process.env.PORT || 3000));\n\napp.listen(app.get('port'), () => {\n  console.log('Node app is running on port', app.get('port'));\n});\n"]}