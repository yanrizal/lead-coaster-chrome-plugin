{"version":3,"sources":["../../src/routes/main.routes.js"],"names":[],"mappings":"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","file":"main.routes.js","sourcesContent":["import express from 'express';\nimport bodyParser from 'body-parser';\nimport request from 'request';\nimport chalk from 'chalk';\nimport passport from 'passport';\nimport * as fileController from '../controllers/fileController';\nimport * as authController from '../controllers/authController';\nconst jsonParser = bodyParser.json();\n\n\nmodule.exports = (app, passport) => {\n\n    app.post('/api/v1/savedata', jsonParser, fileController.saveData);\n    app.post('/api/v1/getdata', jsonParser, isLoggedIn, fileController.getData);\n    app.post('/api/v1/linkedin/post', jsonParser, fileController.linkedinSave);\n    app.post('/api/v1/adddata', jsonParser, fileController.addData);\n    app.post('/api/v1/deletedata', jsonParser, fileController.deleteData);\n    //auth\n    app.post('/login', authController.loginAuth);\n    app.post('/signup', authController.signupAuth);\n    app.post('/login-chrome', authController.chromeAuth);\n\n    app.get('/', (req, res) => {\n      let user = (req.user ? true : false);\n      let email = (req.user ? req.user.local.email : '');\n      res.render('index', { title: 'index', user: user, email: email });\n    });\n\n    app.get('/login', (req, res) => {\n      let user = (req.user ? true : false);\n      res.render('index', { title: 'login', user: user });\n    });\n\n    app.get('/signup', (req, res) => {\n      let user = (req.user ? true : false);\n      res.render('index', { title: 'signup', user: user });\n    });\n\n    app.get('/help', isLoggedIn, (req, res) => {\n      console.log(req.user);\n      let user = (req.user ? true : false);\n      let email = (req.user ? req.user.local.email : '');\n      res.render('index', { title: 'Help', user: user, email: email });\n    });\n\n    app.get('/result/:id', isLoggedIn, (req, res) => {\n      console.log(req.user);\n      let user = (req.user ? true : false);\n      let email = (req.user ? req.user.local.email : '');\n      res.render('index', { title: 'Result', user: user, email: email });\n    });\n\n    app.get('/addcoaster', isLoggedIn, (req, res) => {\n      console.log(req.user);\n      let user = (req.user ? true : false);\n      let email = (req.user ? req.user.local.email : '');\n      res.render('index', { title: 'Coaster Active', user: user, email: email });\n    });\n\n    app.get('/coaster/active', isLoggedIn, (req, res) => {\n      console.log(req.user);\n      let user = (req.user ? true : false);\n      let email = (req.user ? req.user.local.email : '');\n      res.render('index', { title: 'Coaster Active', user: user, email: email });\n    });\n\n    app.get('/logout', (req, res) => {\n        res.clearCookie(\"token\");\n        req.logout();\n        res.redirect('/');\n    });\n};\n\n// route middleware to make sure a user is logged in\nconst isLoggedIn = (req, res, next) => {\n\n    // if user is authenticated in the session, carry on \n    if (req.isAuthenticated())\n        return next();\n\n    // if they aren't redirect them to the home page\n    res.status(401).send({ msg: 'Unauthorized' });\n}\n\n\n\n\n"]}