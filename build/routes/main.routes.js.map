{"version":3,"sources":["../../src/routes/main.routes.js"],"names":[],"mappings":"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","file":"main.routes.js","sourcesContent":["import express from 'express';\nimport bodyParser from 'body-parser';\nimport request from 'request';\nimport cheerio from 'cheerio';\nimport Crawler from 'simplecrawler';\nimport querystring from 'querystring';\nimport fs from 'fs';\nimport chalk from 'chalk';\nimport passport from 'passport';\n\n// const clientID = '759dlh2okqws42';\n// const clientSecret = 'OnnN8xW3X5zecdei';\n// const proxy = 'http://101.96.10.30:84';\n// const agent = new HttpsProxyAgent(proxy);\n\n// const router = express.Router();\n// const jsonParser = bodyParser.json();\n\n\n// router.get('/', (req, res) => {\n//   res.render('index', { title: 'index' });\n// });\n\n// router.get('/login', (req, res) => {\n//   res.render('index', { title: 'Login' });\n// });\n\n// router.get('/signup', (req, res) => {\n//   res.render('index', { title: 'Signup' });\n// });\n\n// router.get('/help', isLoggedIn, (req, res) => {\n//   res.render('index', { title: 'Help' });\n// });\n\n// router.post('/post/url', jsonParser, (req, res) => {\n//   const params = {\n//     url: req.body.url\n//   };\n//   console.log(params.url);\n//   const outputFilename = 'tmp/mysearch.json';\n\n//   fs.writeFile(outputFilename, JSON.stringify(params, null, 4), function(err) {\n//       if(err) {\n//         console.log(err);\n//       } else {\n//         console.log(\"JSON saved to \" + outputFilename);\n//       }\n//   });\n//   res.json(params.url);\n// });\n\n// // process the signup form\n// router.post('/signup-submit', function(req, res, next) {\n//     passport.authenticate('local-signup', function(err, user, info) { \n//         console.log(err);\n//         if (err) { return next(err); }\n//         if (!user) { return res.render('account'); }\n//         req.logIn(user, function(err) {\n//             if (err) { return next(err); }\n//             return res.json({detail: info});\n//         });\n//     })(req, res, next);\n// });\n\n\n// // route middleware to make sure a user is logged in\n// function isLoggedIn(req, res, next) {\n\n//     // if user is authenticated in the session, carry on \n//     if (req.isAuthenticated())\n//         return next();\n\n//     // if they aren't redirect them to the home page\n//     res.redirect('/');\n// }\n\n// app/routes.js\nmodule.exports = function(app, passport) {\n\n    app.get('/', function(req, res) {\n      let user = (req.user ? true : false);\n      res.render('index', { title: 'index', user: user });\n    });\n\n    app.get('/login', function(req, res) {\n      let user = (req.user ? true : false);\n      res.render('index', { title: 'login', user: user });\n    });\n\n    // process the login form\n    app.post('/login', function(req, res, next) {\n      passport.authenticate('local-login', function(err, user, info) { \n        console.log(err);\n        console.log(info);\n        console.log(user);\n        if (err) { return next(err); }\n        if (!user) { return res.redirect('/login'); }\n        req.logIn(user, function(err) {\n            if (err) { return next(err); }\n            return res.json({detail: info});\n        });\n      })(req, res, next);\n    });\n\n    app.get('/signup', function(req, res) {\n      let user = (req.user ? true : false);\n      res.render('index', { title: 'signup', user: user });\n    });\n\n    app.post('/signup', function(req, res, next) {\n      passport.authenticate('local-signup', function(err, user, info) { \n        console.log(err);\n        console.log(info);\n        console.log(user);\n        if (err) { return next(err); }\n        if (!user) { return res.redirect('/login'); }\n        req.logIn(user, function(err) {\n            if (err) { return next(err); }\n            return res.json({detail: info});\n        });\n      })(req, res, next);\n    });\n\n    app.get('/help', isLoggedIn, function(req, res) {\n      console.log(req.user);\n        let user = (req.user ? true : false);\n        res.render('index', { title: 'Help', user: user });\n    });\n\n    app.get('/logout', function(req, res) {\n        req.logout();\n        res.redirect('/');\n    });\n};\n\n// route middleware to make sure a user is logged in\nfunction isLoggedIn(req, res, next) {\n\n    // if user is authenticated in the session, carry on \n    if (req.isAuthenticated())\n        return next();\n\n    // if they aren't redirect them to the home page\n    res.redirect('/');\n}\n\n\n\n\n"]}