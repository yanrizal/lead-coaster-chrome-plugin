{"version":3,"sources":["../../src/models/folder.js"],"names":[],"mappings":"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","file":"folder.js","sourcesContent":["import mongoose from 'mongoose';\nimport md5 from 'md5';\n\nconst folderSchema = new mongoose.Schema({\n  userId: { type: String },\n  folderName: { type: String },\n  file: [{\n    name: { type: String },\n    dom: { type: String },\n    fileId: { type: String },\n    fileIcon: { type: String }\n  }],\n  moduleType: { type: String }\n});\n\nconst Folder = mongoose.model('Folder', folderSchema, 'folder');\n\nexport const findFolder = (params, cb) => {\n  Folder.find(params, (err, folder) => {\n    if (err) return cb(err);\n    cb(null, folder);\n    return true;\n  });\n};\n\nexport const deleteFolder = (params, cb) => {\n  Folder.find(params).remove((err, response) => {\n    console.log(response);\n    const result = {\n      successfully_deleted: false\n    };\n    if (err) return cb(null, result);\n    result.successfully_deleted = true;\n    cb(null, result);\n    return true;\n  });\n};\n\nexport const findOne = (params, cb) => {\n  const md5File = [];\n  const fileArray = params.file;\n  if (fileArray.length >= 1) {\n    fileArray.map((data) => {\n      const newFile = {\n        name: md5(data.fileName),\n        dom: data.fileNode,\n        fileId: data.fileId,\n        fileIcon: data.fileIcon\n      };\n      md5File.push(newFile);\n      return true;\n    });\n  }\n  Folder.findOne({ userId: params.userId, folderName: params.folderName }, (error, folder) => {\n    if (folder === null) {\n      params.file = md5File;\n      const newFolder = new Folder(params);\n      newFolder.save((err, response) => {\n        console.log(response);\n        const result = {\n          successfully_created: false\n        };\n        if (err) return cb(null, result);\n        result.successfully_created = true;\n        cb(null, result);\n        return true;\n      });\n    } else {\n      folder.file = md5File;\n      folder.save((err, response) => {\n        console.log(response);\n        const result = {\n          successfully_updated: false\n        };\n        if (err) return cb(null, result);\n        result.successfully_updated = true;\n        cb(null, result);\n        return true;\n      });\n    }\n  });\n};\n"]}